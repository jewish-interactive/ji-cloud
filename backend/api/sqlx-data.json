{
  "db": "PostgreSQL",
  "09235acdd936537b2a819b15b7aed2df73de16cf7d6b685873f52e4b6d3a7a4d": {
    "query": "\ninsert into category (index, parent_id, name)\nVALUES((select count(*)::int2 from category where parent_id is not distinct from $1), $1, $2)\nreturning index, id",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        },
        {
          "ordinal": 1,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Text"
        ]
      },
      "nullable": [
        false,
        false
      ]
    }
  },
  "0978a2ae9cbe0c16d58c15229324bad8325b60d9128b982a6476980be6965677": {
    "query": "\nupdate category\nset updated_at = now(),\n    index = least((select count(*)::int2 from category c where c.parent_id is not distinct from parent_id), $1)\nwhere id = $2\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "12733111814b439e48d7e9f8ce720e88382a2e0a92dc6ec1dc077c09ad4a47a9": {
    "query": "select exists (select 1 from \"user\" where id = $1) as \"exists!\"",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "exists!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "1f8df54bb87c543c4a975eb72c8c981ecd033664f68e66a2caff692ac30c14c3": {
    "query": "\nupdate category\nset parent_id = $1,\n    updated_at = now(),\n    index = (select count(*)::int2 from category where parent_id is not distinct from $1)\nwhere id = $2\nreturning index\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "2304834612daefc37b933358ec4579f3dbb925a1be3984b38bc7e6093753b5cb": {
    "query": "\n    with recursive inverse_category_tree(index, id, parent_id, structure) as\n    (\n        select index::int2,\n               id,\n               parent_id,\n               jsonb_build_object('id', id, 'name', name, 'created_at', created_at, 'updated_at',\n                                  updated_at)\n        from category co\n        where id = any ($1::uuid[])\n        union all\n        select co.index::int2,\n               id,\n               parent_id,\n               jsonb_build_object('id', id, 'name', name, 'created_at', created_at, 'updated_at',\n                                  updated_at, 'children',\n                                  jsonb_agg(_lat.structure))\n        from category co\n                 join lateral (\n            select ct.structure\n            from inverse_category_tree ct\n            where ct.parent_id = co.id\n            order by ct.index\n            ) _lat on true\n        group by co.id\n    )\nselect coalesce(jsonb_agg(structure order by index), '[]') as \"categories!: sqlx::types::Json<Vec<Category>>\"\nfrom inverse_category_tree\nwhere parent_id is null;\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "categories!: sqlx::types::Json<Vec<Category>>",
          "type_info": "Jsonb"
        }
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": [
        null
      ]
    }
  },
  "3917a9f539e6514f36cb79a79236a4351970d48d1fd37cf06483c3013ff32b30": {
    "query": "select id from \"user\" where firebase_id = $1",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "39a8d9f6b645305b1a6282c110154c481dcdd211fabf7944655438c13b55511c": {
    "query": "update category set name = $1 where id = $2",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Text",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "411526cce8e49dd777e3dbc44db4fcd5ef5e954602c4ae1d5c04a221dd78da93": {
    "query": "\nselect id as \"id: CategoryId\", name, created_at, updated_at\nfrom category\nwhere parent_id is null\norder by index\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: CategoryId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": []
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "4e2cce1d7c10c79ae6d07626a2fa64807f82c50d7e647eddbc7b3d8ee0e19f29": {
    "query": "\nupdate category\nset updated_at = now(),\n    index = index + 1\nwhere index >= $1 and parent_id = $2\n                ",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "51a40f41372d3ac245973b6c148c56e71684c771e64465cf5c188241d4416d4a": {
    "query": "\nupdate category\nset index = index - 1, updated_at = now()\nwhere index > $1 and index <= $2 is not false and parent_id is not distinct from $3\n",
    "describe": {
      "columns": [],
      "parameters": {
        "Left": [
          "Int2",
          "Int2",
          "Uuid"
        ]
      },
      "nullable": []
    }
  },
  "76a022183b6addb81416606a1e9a08f1b30056a36137e1dd630c1cad08acaaef": {
    "query": "\ndelete from category where id = $1\nreturning index, parent_id\n    ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "index",
          "type_info": "Int2"
        },
        {
          "ordinal": 1,
          "name": "parent_id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        false,
        true
      ]
    }
  },
  "837809b203432d774c6ce23f6213712da91017985ddb5ffdcf6ca771a33e7570": {
    "query": "\nselect parent_id, index from category where id = $1\n    ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "parent_id",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "index",
          "type_info": "Int2"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid"
        ]
      },
      "nullable": [
        true,
        false
      ]
    }
  },
  "83c4e421a83eb284ceab3d18858a6c5718d8e2d82679ac07c2e6edeb228ee0e3": {
    "query": "\nINSERT INTO \"user\" \n    (firebase_id, display_name, email) \nVALUES \n    ($1, $2, $3::text)\nreturning id\n        ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id",
          "type_info": "Uuid"
        }
      ],
      "parameters": {
        "Left": [
          "Text",
          "Text",
          "Text"
        ]
      },
      "nullable": [
        false
      ]
    }
  },
  "9ebbeeb42bbded2e27d8aca7e692b80d0d426806d748339d3eb9020887ccedc0": {
    "query": "\nselect id as \"id: CategoryId\", name, created_at, updated_at\nfrom category\n         inner join unnest($1::uuid[]) with ordinality t(id, ord) USING (id)\norder by t.ord\n",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "id: CategoryId",
          "type_info": "Uuid"
        },
        {
          "ordinal": 1,
          "name": "name",
          "type_info": "Text"
        },
        {
          "ordinal": 2,
          "name": "created_at",
          "type_info": "Timestamptz"
        },
        {
          "ordinal": 3,
          "name": "updated_at",
          "type_info": "Timestamptz"
        }
      ],
      "parameters": {
        "Left": [
          "UuidArray"
        ]
      },
      "nullable": [
        false,
        false,
        false,
        true
      ]
    }
  },
  "edf5cb94b8714ed9995df1c7266d8837390d35250f6c20f3d65b73974e50da4b": {
    "query": "\nwith recursive cte(parent_id) as (\nselect parent_id from category where id = $1\nunion all\nselect c.parent_id from category c inner join cte on cte.parent_id = c.id\n) select exists(select 1 from cte where parent_id = $2) as \"would_cycle!\"\n    ",
    "describe": {
      "columns": [
        {
          "ordinal": 0,
          "name": "would_cycle!",
          "type_info": "Bool"
        }
      ],
      "parameters": {
        "Left": [
          "Uuid",
          "Uuid"
        ]
      },
      "nullable": [
        null
      ]
    }
  }
}